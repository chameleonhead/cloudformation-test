# https://docs.aws.amazon.com/vpc/latest/userguide/vpc-cidr-blocks.html#add-cidr-block-restrictions

AWSTemplateFormatVersion: 2010-09-09

Parameters:
  VpcName:
    Type: String
    Default: multicidr-vpc

  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16

  Subnet1AZ1CIDR:
    Type: String
    Default: 10.0.0.0/24

  Subnet1AZ2CIDR:
    Type: String
    Default: 10.0.1.0/24

  Subnet2AZ1CIDR:
    Type: String
    Default: 10.0.2.0/24

  Subnet2AZ2CIDR:
    Type: String
    Default: 10.0.3.0/24

  IntraVpcCIDR:
    Type: String
    Default: 100.64.2.0/24

  IntraSubnet1AZ1CIDR:
    Type: String
    Default: 100.64.2.0/28

  IntraSubnet1AZ2CIDR:
    Type: String
    Default: 100.64.2.16/28

  IntraSubnet2AZ1CIDR:
    Type: String
    Default: 100.64.2.128/27

  IntraSubnet2AZ2CIDR:
    Type: String
    Default: 100.64.2.160/27

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-${AWS::Region}

  Subnet1AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref Subnet1AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-subnet1az1-${AWS::Region}

  Subnet1AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref Subnet1AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-subnet1az2-${AWS::Region}

  Subnet2AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref Subnet2AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-subnet2az1-${AWS::Region}

  Subnet2AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref Subnet2AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-subnet2az2-${AWS::Region}

  IntraVpcCidrBlock:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref IntraVpcCIDR

  IntraSubnet1AZ1:
    DependsOn:
      - IntraVpcCidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref IntraSubnet1AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-intra-subnet1az1-${AWS::Region}

  IntraSubnet1AZ2:
    DependsOn:
      - IntraVpcCidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref IntraSubnet1AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-intra-subnet1az2-${AWS::Region}

  IntraSubnet2AZ1:
    DependsOn:
      - IntraVpcCidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref IntraSubnet2AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-intra-subnet2az1-${AWS::Region}

  IntraSubnet2AZ2:
    DependsOn:
      - IntraVpcCidrBlock
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref IntraSubnet2AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-intra-subnet2az2-${AWS::Region}

  RouteTableForIntraSubnet:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-route-table-intra-subnet1-${AWS::Region}

  RouteTableAssociationForIntraSubnet1AZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForIntraSubnet
      SubnetId: !Ref IntraSubnet1AZ1

  RouteTableAssociationForIntraSubnet1AZ2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForIntraSubnet
      SubnetId: !Ref IntraSubnet1AZ2

  RouteTableAssociationForIntraSubnet2AZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForIntraSubnet
      SubnetId: !Ref IntraSubnet2AZ1

  RouteTableAssociationForIntraSubnet2AZ2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForIntraSubnet
      SubnetId: !Ref IntraSubnet2AZ2

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPC

  Subnet1AZ1:
    Description: A reference to the created Subnet1AZ1
    Value: !Ref Subnet1AZ1
    Export:
      Name: !Sub ${AWS::StackName}-Subnet1AZ1

  Subnet1AZ2:
    Description: A reference to the created Subnet1AZ2
    Value: !Ref Subnet1AZ2
    Export:
      Name: !Sub ${AWS::StackName}-Subnet1AZ2

  Subnet2AZ1:
    Description: A reference to the created Subnet2AZ1
    Value: !Ref Subnet2AZ1
    Export:
      Name: !Sub ${AWS::StackName}-Subnet2AZ1

  Subnet2AZ2:
    Description: A reference to the created Subnet2AZ2
    Value: !Ref Subnet2AZ2
    Export:
      Name: !Sub ${AWS::StackName}-Subnet2AZ2

  IntraSubnet1AZ1:
    Description: A reference to the created IntraSubnet1AZ1
    Value: !Ref IntraSubnet1AZ1
    Export:
      Name: !Sub ${AWS::StackName}-IntraSubnet1AZ1

  IntraSubnet1AZ2:
    Description: A reference to the created IntraSubnet1AZ2
    Value: !Ref IntraSubnet1AZ2
    Export:
      Name: !Sub ${AWS::StackName}-IntraSubnet1AZ2

  IntraSubnet2AZ1:
    Description: A reference to the created IntraSubnet2AZ1
    Value: !Ref IntraSubnet2AZ1
    Export:
      Name: !Sub ${AWS::StackName}-IntraSubnet2AZ1

  IntraSubnet2AZ2:
    Description: A reference to the created IntraSubnet2AZ2
    Value: !Ref IntraSubnet2AZ2
    Export:
      Name: !Sub ${AWS::StackName}-IntraSubnet2AZ2


  RouteTableForIntraSubnet:
    Value: !Ref RouteTableForIntraSubnet
    Export:
      Name: !Sub ${AWS::StackName}-RouteTableForIntraSubnet
