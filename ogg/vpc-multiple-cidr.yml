AWSTemplateFormatVersion: 2010-09-09

Parameters:
  VpcName:
    Type: String
    Default: vpc-multiple-cidr

  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16
    
  VpcIntraCIDR:
    Type: String
    Default: 172.17.2.0/24

  IntraSubnet1AZ1CIDR:
    Type: String
    Default: 172.17.2.0/28

  IntraSubnet1AZ2CIDR:
    Type: String
    Default: 172.17.2.16/28

  IntraSubnet2AZ1CIDR:
    Type: String
    Default: 172.17.2.128/27

  IntraSubnet2AZ2CIDR:
    Type: String
    Default: 172.17.2.160/27

  Subnet1AZ1CIDR:
    Type: String
    Default: 10.0.0.0/24

  Subnet1AZ2CIDR:
    Type: String
    Default: 10.0.1.0/24

  Subnet2AZ1CIDR:
    Type: String
    Default: 10.0.2.0/24

  Subnet2AZ2CIDR:
    Type: String
    Default: 10.0.3.0/24

  # OggInstanceIPAddress:
  #   Type: String
  #   Default: 

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-${AWS::Region}

  VpcIntraCidrBlock:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref VpcIntraCIDR

  IntraSubnet1AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref IntraSubnet1AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: ${VpcName}-intra-subnet1az1-${AWS::Region}

  IntraSubnet1AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref IntraSubnet1AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: ${VpcName}-intra-subnet1az2-${AWS::Region}

  IntraSubnet2AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref IntraSubnet2AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: ${VpcName}-intra-subnet2az1-${AWS::Region}

  IntraSubnet2AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref IntraSubnet2AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: ${VpcName}-intra-subnet2az2-${AWS::Region}

  Subnet1AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref Subnet1AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: ${VpcName}-subnet1az1-${AWS::Region}

  Subnet1AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref Subnet1AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: ${VpcName}-subnet1az2-${AWS::Region}

  Subnet2AZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref Subnet2AZ1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: ${VpcName}-subnet2az1-${AWS::Region}

  Subnet2AZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref Subnet2AZ2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: ${VpcName}-subnet2az2-${AWS::Region}

  IntraRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-intra-route-${AWS::Region}

  IntraSubnet1AZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref IntraRouteTable
      SubnetId: !Ref IntraSubnet1AZ1

  IntraSubnet1AZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref IntraRouteTable
      SubnetId: !Ref IntraSubnet1AZ2

  IntraSubnet2AZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref IntraRouteTable
      SubnetId: !Ref IntraSubnet2AZ1

  IntraSubnet2AZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref IntraRouteTable
      SubnetId: !Ref IntraSubnet2AZ2

  # OggInstance:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     ImageId: "ami-027a63125bb60c403"
  #     InstanceType: t2.micro
  #     PrivateIpAddress: 
  #     BlockDeviceMappings:
  #       - DeviceName: /dev/sda1
  #         Ebs:
  #           VolumeType: gp3
  #           DeleteOnTermination: false
  #           VolumeSize: 250

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  Subnet1Subnets:
    Description: A list of the subnet1 subnets
    Value: !Join [",", [!Ref Subnet1AZ1, !Ref Subnet1AZ2]]

  Subnet2Subnets:
    Description: A list of the subnet2 subnets
    Value: !Join [",", [!Ref Subnet2AZ1, !Ref Subnet2AZ2]]
