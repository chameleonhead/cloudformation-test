# aws cloudformation create-stack --stack-name peering-resources --template-body file://peering-resources.yml --capabilities CAPABILITY_IAM
# aws cloudformation update-stack --stack-name peering-resources --template-body file://peering-resources.yml --capabilities CAPABILITY_IAM
# aws cloudformation delete-stack --stack-name peering-resources
# aws cloudformation describe-stacks --stack-name peering-resources

AWSTemplateFormatVersion: 2010-09-09

Parameters:
  VpcName:
    Type: String
    Default: peeing-vpc

Resources:
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !ImportValue peering-vpc-PublicSubnetAZ1

  RouteTableRouteForVPCRdsSubnet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !ImportValue peering-vpc-RouteTableForVPCRdsSubnet
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OGG Security Group
      VpcId: !ImportValue peering-vpc-VPC
      SecurityGroupIngress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${VpcName}-ogg-security-group-${AWS::Region}

  EC2IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EC2IAMRole

  OggInstanceKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Sub ${AWS::StackName}-OggInstanceKeyPair

  OggInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "{{resolve:ssm:image-builder-ami}}"
      InstanceType: t2.small
      KeyName: !Ref OggInstanceKeyPair
      IamInstanceProfile: !Ref EC2InstanceProfile
      SubnetId: !ImportValue peering-vpc-RdsSubnetAZ1
      SecurityGroupIds:
        - !Ref SecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp3
            VolumeSize: 30
      UserData:
        Fn::Base64: |
          #!/bin/bash
          cd /tmp
          dnf install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
          systemctl enable amazon-ssm-agent
          systemctl start amazon-ssm-agent

          sudo su oracle << 'EOF'
          export ORACLE_HOME=/opt/oracle/product/19.3.0/client_1
          export OGG_HOME=/opt/oracle/product/19.1.0/oggcore_1
          export PATH=$OGG_HOME/bin:$ORACLE_HOME/bin:$PATH
          cat << IEOF > /opt/oracle/install/oggca.rsp
          oracle.install.responseFileVersion=/oracle/install/rspfmt_oggca_response_schema_v19_1_0
          CONFIGURATION_OPTION=ADD
          DEPLOYMENT_NAME=Local
          ADMINISTRATOR_USER=oggadmin
          ADMINISTRATOR_PASSWORD=P@ssw0rd
          SERVICEMANAGER_DEPLOYMENT_HOME=/opt/oracle/ogg_deployments/ServiceManager
          HOST_SERVICEMANAGER=127.0.0.1
          PORT_SERVICEMANAGER=11000
          SECURITY_ENABLED=false
          STRONG_PWD_POLICY_ENABLED=true
          CREATE_NEW_SERVICEMANAGER=true
          REGISTER_SERVICEMANAGER_AS_A_SERVICE=true
          INTEGRATE_SERVICEMANAGER_WITH_XAG=false
          EXISTING_SERVICEMANAGER_IS_XAG_ENABLED=false
          OGG_SOFTWARE_HOME=/opt/oracle/product/19.1.0/oggcore_1
          OGG_DEPLOYMENT_HOME=/opt/oracle/ogg_deployments/Local
          OGG_ETC_HOME=
          OGG_CONF_HOME=
          OGG_SSL_HOME=
          OGG_VAR_HOME=
          OGG_DATA_HOME=
          ENV_ORACLE_HOME=/opt/oracle/product/19.3.0/client_1
          ENV_LD_LIBRARY_PATH=${OGG_HOME}/lib
          ENV_TNS_ADMIN=${ORACLE_HOME}/network/admin
          ENV_ORACLE_SID=ORCLCDB
          ENV_STREAMS_POOL_SIZE=
          ENV_USER_VARS=
          CIPHER_SUITES=
          SERVER_WALLET=
          SERVER_CERTIFICATE=
          SERVER_CERTIFICATE_KEY_FILE=
          SERVER_CERTIFICATE_KEY_FILE_PWD=
          CLIENT_WALLET=
          CLIENT_CERTIFICATE=
          CLIENT_CERTIFICATE_KEY_FILE=
          CLIENT_CERTIFICATE_KEY_FILE_PWD=
          SHARDING_ENABLED=false
          SHARDING_USER=
          ADMINISTRATION_SERVER_ENABLED=true
          PORT_ADMINSRVR=11001
          DISTRIBUTION_SERVER_ENABLED=true
          PORT_DISTSRVR=11002
          NON_SECURE_DISTSRVR_CONNECTS_TO_SECURE_RCVRSRVR=false
          RECEIVER_SERVER_ENABLED=true
          PORT_RCVRSRVR=11003
          METRICS_SERVER_ENABLED=true
          METRICS_SERVER_IS_CRITICAL=false
          PORT_PMSRVR=11004
          UDP_PORT_PMSRVR=11005
          PMSRVR_DATASTORE_TYPE=BDB
          PMSRVR_DATASTORE_HOME=/opt/oracle/ogg_deployments/Local/datastore
          OGG_SCHEMA=ggadmin
          REMOVE_DEPLOYMENT_FROM_DISK=
          IEOF
          $OGG_HOME/bin/oggca.sh -silent -responseFile /opt/oracle/install/oggca.rsp
          EOF
          PID=$(cat "/opt/oracle/ogg_deployments/ServiceManager/var/run/ServiceManager.pid" 2>/dev/null)
          kill -0 ${PID} 2>/dev/null

          /opt/oracle/ogg_deployments/ServiceManager/bin/registerServiceManager.sh
          systemctl enable OracleGoldenGate
          systemctl start OracleGoldenGate
